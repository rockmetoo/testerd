#!/bin/bash
#
# x.startup - This shell script takes care of starting and stopping testerd1
#
# Author: rockmetoo
# Email: rockmetoo@gmail.com

red='\e[0;31m'
green='\e[0;32m'
yellow='\e[0;33m'
blue='\e[0;34m'
NC='\e[0m'

PIDFILE=/var/run/testerd1.pid
DAEMON=/home/testerd/testerd
# env; local or development or production
OPTIONS='--env local --port 6666 --pid /var/run/testerd1.pid --log /var/log/testerd/testerd1.log --maxthread 90'

processCheck() {
    ps -p $1 > /dev/null
    if [ $? -eq 0 ]
    then
        echo -e "$2 ${green}running${NC} [$1]"
    else
        echo -e "$2 ${yellow}not found (down?)${NC}"
    fi
}

start() {
        echo -n "Starting testerd1 Daemon Server..."
        if [ -f $PIDFILE ]; then
                PID=`cat $PIDFILE`
                echo testerd1 already running: $PID
                exit 2;
        else
        		sysctl -w net.core.somaxconn=4096
				sysctl -w net.ipv4.tcp_tw_recycle=1
				sysctl -w net.ipv4.tcp_tw_reuse=1
				ulimit -s unlimited
				ulimit -n 4096
				ulimit -u 2048
				ulimit -v unlimited
				ulimit -x unlimited
				ulimit -m unlimited
                $DAEMON $OPTIONS
                RETVAL=$?
                echo
                [ $RETVAL -eq 0 ] && mkdir -p /var/log/testerd && mkdir -p /var/lock/testerd1/ && touch /var/lock/testerd1/testerd1
                return $RETVAL
        fi

}

stop() {
        echo -n "Shutting down all testerd..."
        echo
        killall -9 testerd
        echo
        rm -f /var/lock/testerd1/testerd1
        rm -f /var/run/testerd1.pid
        return 0
}

status() {
        if [ -f $PIDFILE ]
        then
            processCheck `cat $PIDFILE` "testerd1"
        else
            echo -e "testerd1 ${blue}not running${NC}"
        fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        start
        ;;
    status)
        status
        ;;
    *)
        echo "Usage:  {start|stop|restart|status}"
        exit 1
        ;;
esac
exit $?
