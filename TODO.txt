1. maxhops calculation thread needs to update directly in to mongo db. 
Currently it is updating at mysql and each test call get it from mysql [Not good]

2. 'testPlotQueue' table - When no str exist then system will queue the plot in this table
and change the 'plotStatus' to 4 (queued) and insert a row in 'plotQueue' table.
If 'plotStatus' is 4 then no other trigger will work for that particular plot.
Smith will check 'plotQueue' table in every 1 minute to get a task. When smith get a task then
it will change the 'plotStatus' to 1/2 and also change the 'status' in 'plotQueue' table to 1 (under processing)
REFER: smithd 334



Current Process
---------------
1. Currently working on helper -> initUploadCurl() and please consider this link http://curl.haxx.se/libcurl/c/fileupload.html
http://curl.haxx.se/libcurl/c/postit2.html

<?php
    
    if(file_exists("/tmp/" . $_FILES["file"]["name"]))
    {
        echo $_FILES["file"]["name"] . " already exists. ";
    }
    else
    {
        move_uploaded_file($_FILES["file"]["tmp_name"], "/tmp/" . $_FILES["file"]["name"]);
        
        echo "Stored in: " . "/tmp/" . $_FILES["file"]["name"];
    }
?> 

#include <stdio.h>
#include <string.h>
 
#include <curl/curl.h>
 
int main(int argc, char *argv[])
{
  CURL *curl;
  CURLcode res;
 
  struct curl_httppost *formpost=NULL;
  struct curl_httppost *lastptr=NULL;
  struct curl_slist *headerlist=NULL;
  static const char buf[] = "Expect:";
 
  curl_global_init(CURL_GLOBAL_ALL);
 
  /* Fill in the file upload field */ 
  curl_formadd(&formpost,
               &lastptr,
               CURLFORM_COPYNAME, "file",
               CURLFORM_FILE, "/home/tanvir/length.js",
               CURLFORM_END);
 

 
  curl = curl_easy_init();
  /* initalize custom header list (stating that Expect: 100-continue is not
     wanted */ 
  headerlist = curl_slist_append(headerlist, buf);
  if(curl) {
    /* what URL that receives this POST */ 
    curl_easy_setopt(curl, CURLOPT_URL, "http://localhost/fileUpload.php");
    if ( (argc == 2) && (!strcmp(argv[1], "noexpectheader")) )
      /* only disable 100-continue header if explicitly requested */ 
      curl_easy_setopt(curl, CURLOPT_HTTPHEADER, headerlist);
    curl_easy_setopt(curl, CURLOPT_HTTPPOST, formpost);
 
    /* Perform the request, res will get the return code */ 
    res = curl_easy_perform(curl);
    
    double      dVal;
    
    /* Check for errors */ 
    if(res != CURLE_OK)
      printf("curl_easy_perform() failed: %s\n", curl_easy_strerror(res));
    else
    {
        curl_easy_getinfo(curl, CURLINFO_SPEED_UPLOAD, &dVal);
        
        printf("Upload Speed: %.3f\n", dVal);
    }
 
    /* always cleanup */ 
    curl_easy_cleanup(curl);
 
    /* then cleanup the formpost chain */ 
    curl_formfree(formpost);
    /* free slist */ 
    curl_slist_free_all (headerlist);
  }
  return 0;
}


2. Also need to fix gSMITHCP_CLI_PATH in smithd.cpp
3. Create all development environment in /home/smith and /home/smithcp
4. Please read seagull (http://gull.sourceforge.net/), Multi-protocol traffic generator. http://nmap.org/nping/
5. sudo nping --tcp -p 80 --flags SYN,ACK --ttl 2 -c 1 -v1 --data-string "helo" 127.0.0.1